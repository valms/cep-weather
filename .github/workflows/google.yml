name: Deploy to Cloud Run

on:
    push:
        branches:
            - master

env:
    PROJECT_ID: fullcycle-p
    API_KEY: ${{ secrets.WEATHER_API_KEY }}
    SERVICE_NAME: cep-weather-api
    REGION: northamerica-northeast1
    APP_NAME: cep-weather-api

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            -   name: Checkout code
                uses: actions/checkout@v4

            -   id: 'auth'
                uses: 'google-github-actions/auth@v2'
                with:
                    credentials_json: '${{ secrets.GCP_SA_KEY }}'

            -   name: 'Set up Cloud SDK'
                uses: 'google-github-actions/setup-gcloud@v2'

            -   name: Authorize Docker push
                run: gcloud auth configure-docker northamerica-northeast1-docker.pkg.dev

            -   name: Create Artifact Registry repository
                run: |
                    gcloud artifacts repositories create ${{ env.SERVICE_NAME }} \
                      --repository-format=docker \
                      --location=${{ env.REGION }} \
                      --project=${{ env.PROJECT_ID }}

            -   name: Build and Push Container
                run: |
                    docker build -t "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }}" .
                    docker push "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }}"

            -   name: Deploy to Cloud Run
                id: deploy
                uses: google-github-actions/deploy-cloudrun@v2
                with:
                    service: ${{ env.SERVICE_NAME }}
                    region: ${{ env.REGION }}
                    image: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
                    env_vars: |
                        API_KEY=${{ env.API_KEY }}
                    flags: '--allow-unauthenticated'

            -   name: Clean up old images
                run: gcloud artifacts docker images delete ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}/${{ env.APP_NAME }} --quiet

            -   name: Show Output
                run: echo ${{ steps.deploy.outputs.url }}
